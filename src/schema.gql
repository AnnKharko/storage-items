# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Warehouse {
  id: String!
  name: String!
}

type ItemWarehouse {
  id: String!
  warehouseId: String!
  itemId: String!
  count: Float!
  item: Item
  warehouse: Warehouse
}

type Item {
  id: String!
  title: String!
}

type SendDto {
  message: String
  status: Int
}

type User {
  id: String!
  name: String!
  gender: String!
  email: String!
  password: String!
  role: String!
  status: String!
  confirm_token: String!
}

type Auth {
  id: String!
  access_token: String!
  refresh_token: String!
  userId: String!
  user: User!
}

type Dev {
  id: String!
  name: String!
  gender: String!
  email: String!
  password: String!
  role: String!
  status: String!
}

type AuthorizationPayload {
  dev: Dev!
  type: String!
  access_token: String!
  refresh_token: String!
}

type Query {
  findAllItems: [Item!]!
  findItem(id: String!): Item!
  findAllUsers: [User!]!
  findUser(id: String!): User!
  findUserByEmail(email: String!): User!
  getAllWarehouse: [Warehouse!]!
  getOneWarehouse(id: String!): Warehouse!
  findAllDevs: [Dev!]!
  findOneDev(id: String!): Dev!
  findItemWarehouse(id: String!): ItemWarehouse!
  findAllItemWarehouse: [ItemWarehouse!]!
  findWarehouseWithAllItems(id: String!): [ItemWarehouse!]!
}

type Mutation {
  createItem(item: CreateItemDTO!): Item!
  updateItem(updateItem: UpdateItemInputDTO!): Item!
  deleteItem(id: String!): SendDto!
  login(loginDto: LoginDto!): Auth!
  registration(userDto: CreateUserDto!): SendDto!
  refreshTokens: Auth!
  logout: SendDto!
  confirmUser(token: String!): User!
  updateUser: User!
  removeUser(id: Float!): User!
  createWarehouse(warehouse: CreateWarehouseInput!): Warehouse!
  updateWarehouse(warehouse: UpdateWarehouseInput!): Warehouse!
  deleteWarehouse(id: String!): SendDto!
  registrationDev(createDev: CreateDevDto!): AuthorizationPayload!
  loginDev(loginDto: LoginDevDto!): AuthorizationPayload!
  refreshDevToken(refresh_token: String!): AuthorizationPayload!
  createDev(createDev: CreateDevDto!): Dev!
  updateDev(updateDev: UpdateDevDto!): Dev!
  removeDev(id: String!): SendDto!
  createItemWarehouse(itemWarehouse: CreateItemWarehouseDTO!): ItemWarehouse!
  updateItemWarehouse(updateItemWarehouse: UpdateItemWarehouseDTO!): ItemWarehouse!
  deleteItemWarehouse(id: String!): SendDto!
}

input CreateItemDTO {
  title: String!
}

input UpdateItemInputDTO {
  id: String!
  title: String!
}

input LoginDto {
  email: String!
  password: String!
}

input CreateUserDto {
  name: String!
  gender: String!
  email: String!
  password: String!
  role: String!
  status: String = "pending"
}

input CreateWarehouseInput {
  name: String!
}

input UpdateWarehouseInput {
  id: String!
  name: String!
}

input CreateDevDto {
  name: String!
  gender: String!
  email: String!
  password: String!
  role: String!
}

input LoginDevDto {
  email: String!
  password: String!
}

input UpdateDevDto {
  name: String!
  gender: String!
  email: String!
  password: String!
  role: String!
  id: String!
}

input CreateItemWarehouseDTO {
  warehouseId: String!
  itemId: String!
  count: Float!
}

input UpdateItemWarehouseDTO {
  id: String!
  warehouseId: String
  itemId: String
  count: Float
}
